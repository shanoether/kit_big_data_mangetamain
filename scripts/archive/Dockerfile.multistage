# Builder: build wheels (has compilers)
FROM python:3.12-slim AS builder
ENV PYTHONDONTWRITEBYTECODE=1 PYTHONUNBUFFERED=1
WORKDIR /app

# Build-time deps (only in builder)
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential gcc git curl ca-certificates cmake libfreetype6-dev libpng-dev \
  && rm -rf /var/lib/apt/lists/*

COPY requirements-runtime.txt /app/requirements-runtime.txt
# Build wheels for all requirements (avoids compiling in final)
RUN python -m pip install --upgrade pip wheel setuptools && \
    pip wheel --no-deps --wheel-dir /wheels -r /app/requirements-runtime.txt

# Final: tiny runtime with only wheels installed
FROM python:3.12-slim AS runtime
ENV PYTHONDONTWRITEBYTECODE=1 PYTHONUNBUFFERED=1
WORKDIR /app

# Minimal runtime libs for wheels that need them
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates libfreetype6 libpng16-16 \
  && rm -rf /var/lib/apt/lists/*

# Copy wheels and install them (no build tools present)
COPY --from=builder /wheels /wheels
RUN python -m pip install --no-cache-dir /wheels/*.whl

# Copy package source (dev pattern) or pip install . instead if you prefer
COPY src/ /app/
ENV PYTHONPATH=/app

RUN mkdir -p /data/processed
VOLUME ["/data/processed"]

ENTRYPOINT ["python", "-u", "-m", "mangetamain.backend.data_processor"]
